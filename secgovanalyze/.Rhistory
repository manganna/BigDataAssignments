install.packages("edgar")
install.packages("edgar")
clear
load("~/Work/BigDataAssignments/secgovanalyze/secgovanalyzewip.RData")
fb_url2015 < -'https://raw.githubusercontent.com/mr-karan/BigDataAssignments/master/secgovanalyze/fb/2015/fb-20141231.xml'
fb_url2015 <-'https://raw.githubusercontent.com/mr-karan/BigDataAssignments/master/secgovanalyze/fb/2015/fb-20141231.xml'
fb_url2016 <- 'https://raw.githubusercontent.com/mr-karan/BigDataAssignments/master/secgovanalyze/fb/2016/fb-20151231.xml'
library(xbrl)
library(XBRL)
fb_2015 <- xbrlDoAll(fb_url2015)
fb_2015 <- xbrlDoAll(fb_url2015)
pep_url <- 'https://raw.githubusercontent.com/mr-karan/BigDataAssignments/master/secgovanalyze/pep/2015/pep-20141227.xml'
pep_url2015 <- 'https://raw.githubusercontent.com/mr-karan/BigDataAssignments/master/secgovanalyze/pep/2015/pep-20141227.xml'
pep_url2016 <- 'https://raw.githubusercontent.com/mr-karan/BigDataAssignments/master/secgovanalyze/pep/2016/pep-20151226.xml'
old_o <- options(stringsAsFactors = FALSE)
pep_2015 <- xbrlDoAll(pep_url2015)
pep_2016 <- xbrlDoAll(pep_url2016)
fb_2015 <- xbrlDoAll(fb_url2015)
fb_2016 <- xbrlDoAll(fb_url2016)
save.image("~/Work/BigDataAssignments/secgovanalyze/secgovanalyzewip.RData")
options(old_o)
library(finstr)
amzn2015 <- xbrl_get_statements(amzn_2015)
amzn2016 <- xbrl_get_statements(amzn_2016)
amzn2016
amznbs2015 <- amzn2015$ConsolidatedBalanceSheets
amznbs2015
amzn2015$ConsolidatedStatementsOfComprehensiveIncome
amzn2015$ConsolidatedStatementsOfOperations
amznbs2015<-amzn2015$ConsolidatedBalanceSheets
amznbs2016<-amzn2016$ConsolidatedBalanceSheets
amzn <- merge(amznbs2015,amznbs2016)
amzn
amzn$endDate
amzn$Goodwill
library(dplyr)
save.image("~/Work/BigDataAssignments/secgovanalyze/secgovanalyzewip.RData")
amzn %>% transmute(
date = endDate,
CurrentRatio = AssetsCurrent / LiabilitiesCurrent
)
amznCR<- amzn %>% transmute(
date = endDate,
CurrentRatio = AssetsCurrent / LiabilitiesCurrent
)
merge(balance_sheet, st_all$StatementOfIncome ) %>% calculate( digits = 2,
.AccountReceivableLast = lag(AccountsReceivableNetCurrent),
.AccountReceivableAvg = (.AccountReceivableLast + AccountsReceivableNetCurrent)/2,
DaysSalesOutstanding = .AccountReceivableAvg / SalesRevenueNet * 365
)
merge(balance_sheet, st_all$StatementOfIncome ) %>% calculate( digits = 2,
.AccountReceivableLast = lag(AccountsReceivableNetCurrent),
.AccountReceivableAvg = (.AccountReceivableLast + AccountsReceivableNetCurrent)/2,
DaysSalesOutstanding = .AccountReceivableAvg / SalesRevenueNet * 365
)
diff(amzn)
bs_simple <- expose( amzn,
# Assets
`Current Assets` = "AssetsCurrent",
`Noncurrent Assets` = other("Assets"),
# Liabilites and equity
`Current Liabilities` = "LiabilitiesCurrent",
`Noncurrent Liabilities` = other(c("Liabilities", "CommitmentsAndContingencies")),
`Stockholders Equity` = "StockholdersEquity"
)
bs_simple <- expose( amzn,
# Assets
`Current Assets` = "AssetsCurrent",
`Noncurrent Assets` = other("Assets"),
# Liabilites and equity
`Noncurrent Liabilities` = other(c("Liabilities", "CommitmentsAndContingencies")),
`Stockholders Equity` = "StockholdersEquity"
)
bs_simple <- expose( amzn,
# Assets
`Current Assets` = "AssetsCurrent",
`Noncurrent Assets` = other("Assets"),
),
`Stockholders Equity` = "StockholdersEquity"
)
bs_simple <- expose( amzn,
# Assets
`Current Assets` = "AssetsCurrent",
`Noncurrent Assets` = other("Assets"),
`Stockholders Equity` = "StockholdersEquity"
)
bs_simple
library(htmlTable)
print(bs_simple, html = TRUE, big.mark = ",", dateFormat = "%Y")
library(ggplot2)
plot_double_stacked_bar(bs_simple)
fb2015 <- xbrl_get_statements(fb_2015)
fb2016 <- xbrl_get_statements(fb_2016)
fb2016
gm2015 <- xbrl_get_statements(gm_2015)
gm2016 <- xbrl_get_statements(gm_2016)
pep2016 <- xbrl_get_statements(pep_2016)
pep2015 <- xbrl_get_statements(pep_2015)
pep2015
save.image("~/Work/BigDataAssignments/secgovanalyze/secgovanalyzewip.RData")
gm2015
fb2016
fb2016$ConsolidatedBalanceSheets
fb2015$ConsolidatedBalanceSheets
fb2015$ConsolidatedStatementsOfCashFlows
cor(fb2016$ConsolidatedBalanceSheets, fb2015$ConsolidatedBalanceSheets)
fb2015$ConsolidatedBalanceSheets$Goodwill
cor(fb2016$ConsolidatedBalanceSheets$Goodwill[0], fb2015$ConsolidatedBalanceSheets$Goodwill[0])
fb2015$ConsolidatedBalanceSheets$Goodwill
fb2015$ConsolidatedBalanceSheets$Goodwill[0]
x<- fb2015$ConsolidatedBalanceSheets$Goodwill
x
fb2015$ConsolidatedStatementsOfCashFlows
fb2015$ConsolidatedStatementsOfComprehensiveIncome
fb2015$ConsolidatedStatementsOfIncome
AMZN
amzn
amzn_viz <- expose( amzn,
# Assets
`Current Assets` = "AssetsCurrent",
`Noncurrent Assets` = other("Assets"),
# Liabilites and equity
`Current Liabilities` = "LiabilitiesCurrent",
`Noncurrent Liabilities` = other(c("Liabilities", "CommitmentsAndContingencies")),
`Stockholders Equity` = "StockholdersEquity"
)
amzn_viz <- expose( amzn,
# Assets
`Current Assets` = "AssetsCurrent",
`Noncurrent Assets` = other("Assets"),
`Stockholders Equity` = "StockholdersEquity",
)
amzn_viz <- expose( amzn,
# Assets
`Current Assets` = "AssetsCurrent",
`Noncurrent Assets` = other("Assets"),
`Stockholders Equity` = "StockholdersEquity",
`Libailities` = "LiabilitiesCurrent"
)
amzn_viz
library(htmlTable)
print(amzn_viz, html = TRUE, big.mark = ",", dateFormat = "%Y")
library(htmlTable)
print(amzn_viz, html = TRUE, big.mark = " , ", dateFormat = "%Y")
library(htmlTable)
m<- (amzn_viz, html = TRUE, big.mark = " , ", dateFormat = "%Y")
library(htmlTable)
m<-(amzn_viz, html = TRUE, big.mark = " , ", dateFormat = "%Y")
library(htmlTable)
m <-amzn_viz, html = TRUE, big.mark = " , ", dateFormat = "%Y"
library(htmlTable)
m <-(amzn_viz, html = TRUE, big.mark = ",", dateFormat = "%Y")
library(htmlTable)
print(amzn_viz, html = TRUE, big.mark = " , ", dateFormat = "%Y")
amzn_viz <- expose( amzn,
# Assets
`Current Assets` = "AssetsCurrent",
`Noncurrent Assets` = other("Assets"),
`Stockholders Equity` = "StockholdersEquity",
`Libailities` = "LiabilitiesCurrent",
`Goodwill` = "Goodwill"
)
amzn_viz <- expose( amzn,
# Assets
`Current Assets` = "AssetsCurrent",
`Noncurrent Assets` = other("Assets"),
`Stockholders Equity` = "StockholdersEquity",
`Libailities` = "LiabilitiesCurrent",
`CSR` = "Goodwill"
)
amzn
amzn
library(htmlTable)
print(amzn_viz, html = TRUE, big.mark = " , ", dateFormat = "%Y")
amzn$Goodwill
install.packages("plotly")
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
m <- plot_double_stacked_bar(bs_simple)
m
(gg <- ggplotly(m))
library(plotly)
dat <- data.frame(
time = factor(c("Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(14.89, 17.23)
)
ggplot(data=dat, aes(x=time, y=total_bill)) +
geom_bar(stat="identity")
ggplotly()
library(plotly)
DF <- read.table(text="Rank F1     F2     F3
1    500    250    50
2    400    100    30
3    300    155    100
4    200    90     10", header=TRUE)
library(reshape2)
DF1 <- melt(DF, id.var="Rank")
p <- ggplot(DF1, aes(x = Rank, y = value, fill = variable)) +
geom_bar(stat = "identity")
ggplotly(p)
library(plotly)
DF <- read.table(text="Rank F1     F2     F3
1    500    250    50
2    400    100    30
3    300    155    100
4    200    90     10", header=TRUE)
library(reshape2)
DF1 <- melt(DF, id.var="Rank")
p <- ggplot(bs_simple, aes(x = Rank, y = value, fill = variable)) +
geom_bar(stat = "identity")
ggplotly(p)
library(plotly)
DF <- read.table(text="Rank F1     F2     F3
1    500    250    50
2    400    100    30
3    300    155    100
4    200    90     10", header=TRUE)
library(reshape2)
DF1 <- melt(DF, id.var="Rank")
p <- ggplot(bs_simple, aes(x = Rank, y = value, fill = variable)) +
geom_bar(stat = "identity")
ggplotly(p)
m <- plot_double_stacked_bar(bs_simple)
m
m
(gg <- ggplotly(m))
install.packages("knit")
install.packages("knit")
install.packages("knitr")
summary(cars)
summary(cars)
summary(cars)
#AMZN forms
amzn_url2015<-'http://localhost:8000/amzn/2015/amzn-20141231.xml'
amzn_url2016<- 'http://localhost:8000/amzn/2016/amzn-20151231.xml'
old_o <- options(stringsAsFactors = FALSE)
amzn_2015 <- xbrlDoAll(amzn_url2015)
amzn_2016 <- xbrlDoAll(amzn_url2016)
options(old_o)
amzn2015 <- xbrl_get_statements(amzn_2015)
amzn2016 <- xbrl_get_statements(amzn_2016)
# To parse XML documents
library(XBRL)
# To visualize results
library(plotly)
library(ggplot2)
# To analyze balance sheets
library(finstr)
# Data munging
library(dplyr)
# HTML Tables
library(htmlTable)
setwd("~/Work/BigDataAssignments/secgovanalyze")
#AMZN forms
amzn_url2015<-'http://localhost:8000/amzn/2015/amzn-20141231.xml'
amzn_url2016<- 'http://localhost:8000/amzn/2016/amzn-20151231.xml'
old_o <- options(stringsAsFactors = FALSE)
amzn_2015 <- xbrlDoAll(amzn_url2015)
amzn_2016 <- xbrlDoAll(amzn_url2016)
options(old_o)
amzn2015 <- xbrl_get_statements(amzn_2015)
amzn2016 <- xbrl_get_statements(amzn_2016)
amzn <- merge(amzn2015,amzn2016)
amznSOP <- merge(amzn2015$ConsolidatedStatementsOfOperations,amzn2016$ConsolidatedStatementsOfOperations)
amznBalanceSheet<- merge(amzn2015$ConsolidatedBalanceSheets,amzn2016$ConsolidatedBalanceSheets)
amznCashflow <- merge(amzn2015$ConsolidatedStatementsOfCashFlows,amzn2016$ConsolidatedStatementsOfCashFlows)
amznCashflow
